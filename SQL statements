//////////////////// PART 1 ////////////////
1. SELECT *
FROM INVOICE
JOIN INVOICE_LINE ON INVOICE_LINE.INVOICE_ID = INVOICE.INVOICE_ID
WHERE UNIT_PRICE > 1;

2. SELECT I.INVOICE_DATE, C.FIRST_NAME, C.LAST_NAME
FROM INVOICE I
JOIN CUSTOMER C ON C.CUSTOMER_ID = I.CUSTOMER_ID;

3. SELECT C.FIRST_NAME, C.LAST_NAME, E.FIRST_NAME, E.LAST_NAME
FROM CUSTOMER C
JOIN EMPLOYEE E ON C.SUPPORT_REP_ID = E.EMPLOYEE_ID;

4. SELECT A.TITLE, AR.NAME
FROM ALBUM A
JOIN ARTIST AR ON A.ARTIST_ID = AR.ARTIST_ID;

5. SELECT pt.track_id
FROM playlist_track pt
JOIN playlist p ON p.playlist_id = pt.playlist_id
WHERE p.name = 'Music';

6. SELECT T.NAME
FROM TRACK T
JOIN PLAYLIST_TRACK P ON P.TRACK_ID = T.TRACK_ID
WHERE PLAYLIST_ID = 5;

7. SELECT T.NAME, P.NAME
FROM TRACK T
JOIN PLAYLIST_TRACK PT ON T.TRACK_ID = PT.TRACK_ID
JOIN PLAYLIST P ON P.PLAYLIST_ID = PT.PLAYLIST_ID;

8. SELECT t.name, a.title
FROM track t
JOIN album a ON t.album_id = a.album_id
JOIN genre g ON g.genre_id = t.genre_id
WHERE g.name = 'Alternative & Punk';

BLACK DIAMOND:


//////////////////// PART  /////////////////////

1. SELECT *
FROM INVOICE
WHERE INVOICE_ID IN (
  SELECT INVOICE_ID
  FROM INVOICE_LINE 
  WHERE UNIT_PRICE > 1
  )

2. SELECT *
FROM PLAYLIST_TRACK
WHERE PLAYLIST_ID IN(
  SELECT PLAYLIST_ID 
  FROM PLAYLIST 
  WHERE NAME ILIKE 'Music'
);

3. SELECT NAME
FROM TRACK
WHERE TRACK_ID IN(
  SELECT TRACK_ID
  FROM PLAYLIST_TRACK
  WHERE PLAYLIST_ID = 5);

4. SELECT NAME
FROM TRACK
WHERE GENRE_ID IN(
  SELECT GENRE_ID
  FROM GENRE
  WHERE name = 'Comedy'
  )

5. SELECT *
FROM TRACK
WHERE ALBUM_ID IN(
  SELECT ALBUM_ID
  FROM ALBUM
  WHERE TITLE = 'Fireball'
  );

6. SELECT *
FROM TRACK
WHERE ALBUM_ID IN (
  SELECT ALBUM_ID
  FROM ALBUM
  WHERE ARTIST_ID IN (
    SELECT ARTIST_ID
    FROM ARTIST
    WHERE ARTIST_ID = 51));

////////////////////// PART 3 ///////////////////

1. UPDATE CUSTOMER
SET FAX = NULL
WHERE FAX IS NOT NULL;

2. UPDATE CUSTOMER
SET COMPANY = 'Self'
WHERE COMPANY IS NULL;

3. UPDATE CUSTOMER
SET LAST_NAME = 'Thompson'
WHERE FIRST_NAME = 'Julia'
	AND LAST_NAME = 'Barnett';

4. UPDATE CUSTOMER
SET SUPPORT_REP_ID = 5
WHERE EMAIL = 'luisrojas@yahoo.cl'

5. UPDATE TRACK
SET COMPOSER = 'The darkness around us'
WHERE GENRE_ID = 3
	AND COMPOSER IS NULL;

//////////////// PART 4 //////////////////////

1. SELECT COUNT(*), G.NAME
FROM TRACK T
JOIN GENRE G ON T.GENRE_ID = G.GENRE_ID
GROUP BY G.NAME;

2. SELECT COUNT(*), G.NAME
FROM TRACK T
JOIN GENRE G ON T.GENRE_ID = G.GENRE_ID
WHERE G.NAME = 'Pop' OR G.NAME = 'Rock'
GROUP BY G.NAME;

3. SELECT AR.NAME, COUNT(*)
FROM ALBUM AL
JOIN ARTIST AR ON AR.ARTIST_ID = AL.ARTIST_ID
GROUP BY AR.NAME;

////////////// PART 5 /////////////////

1. SELECT DISTINCT COMPOSER
FROM TRACK; 

2. SELECT DISTINCT BILLING_POSTAL_CODE
FROM INVOICE;

3. SELECT DISTINCT COMPANY
FROM CUSTOMER;

///////////////////// PART 6 ///////////////////////

2. DELETE FROM PRACTICE_DELETE
WHERE TYPE = 'bronze';

3. DELETE FROM PRACTICE_DELETE
WHERE TYPE = 'silver';

4. DELETE FROM PRACTICE_DELETE
WHERE VALUE = 150;

///////////////// PART 7 /////////////////////

1. CREATE TABLE ONE (USERS TEXT, PRODUCT TEXT, ORDERS INTEGER);
INSERT INTO ONE (USERS, PRODUCT, ORDERS) VALUES ('DOM', 'APPLE', 1);
INSERT INTO ONE (USERS, PRODUCT, ORDERS) VALUES ('ROBERT', 'SOCKS', 6);
INSERT INTO ONE (USERS, PRODUCT, ORDERS) VALUES ('ANGIE', 'SOAP', 4);

CREATE TABLE TWO (USERS TEXT, PRODUCT TEXT, ORDERS INTEGER);
INSERT INTO TWO (USERS, PRODUCT, ORDERS) VALUES ('DOM', 'APPLE', 1);
INSERT INTO TWO (USERS, PRODUCT, ORDERS) VALUES ('ROBERT', 'SOCKS', 6);
INSERT INTO TWO (USERS, PRODUCT, ORDERS) VALUES ('ANGIE', 'SOAP', 4);

CREATE TABLE THREE (USERS TEXT, PRODUCT TEXT, ORDERS INTEGER);
INSERT INTO THREE (USERS, PRODUCT, ORDERS) VALUES ('DOM', 'APPLE', 1);
INSERT INTO THREE (USERS, PRODUCT, ORDERS) VALUES ('ROBERT', 'SOCKS', 6);
INSERT INTO THREE (USERS, PRODUCT, ORDERS) VALUES ('ANGIE', 'SOAP', 4);

2. SELECT PRODUCT 
FROM ONE;

SELECT PRODUCT 
FROM TWO;

SELECT PRODUCT
FROM THREE;

3. SELECT ORDERS
FROM ONE;

SELECT ORDERS
FROM TWO;

SELECT ORDERS
FROM THREE;

4. SELECT SUM(ORDERS) AS "TOTAL"
FROM ONE;

5. 